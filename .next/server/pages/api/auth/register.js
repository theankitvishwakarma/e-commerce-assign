"use strict";(()=>{var e={};e.id=7,e.ids=[7],e.modules={96:e=>{e.exports=require("bcrypt")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},999:(e,r,t)=>{t.r(r),t.d(r,{config:()=>c,default:()=>u,routeModule:()=>p});var s={};t.r(s),t.d(s,{default:()=>handler});var a=t(802),o=t(44),n=t(249),i=t(858),l=t(96),d=t.n(l);async function handler(e,r){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});try{let{name:t,email:s,password:a}=e.body;if(!t||!s||!a)return r.status(400).json({error:"Missing fields"});let o=await i.Z,n=o.db("deepseek"),l=n.collection("users"),u=await l.findOne({email:s});if(u)return r.status(400).json({error:"User already exists"});let c=await d().hash(a,10);await l.insertOne({name:t,email:s,password:c}),r.status(201).json({message:"User registered successfully"})}catch(e){console.error(e),r.status(500).json({error:"Internal Server Error"})}}let u=(0,n.l)(s,"default"),c=(0,n.l)(s,"config"),p=new a.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/auth/register",pathname:"/api/auth/register",bundlePath:"",filename:""},userland:s})},858:(e,r,t)=>{let s;t.d(r,{Z:()=>n});let a=require("mongodb"),o=process.env.MONGODB_URI;if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");s=new a.MongoClient(o,{}).connect();let n=s}};var r=require("../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[222],()=>__webpack_exec__(999));module.exports=t})();